{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/g4rtu1/Work/saypilot/pages/postsAndAnalytics/chart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from \"preact/hooks\";\nimport { Line } from \"react-chartjs-2\";\n\nvar Chart = function Chart(props) {\n  _s();\n\n  var chartRef = useRef(null);\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var chartData = {\n    labels: [],\n    datasets: [{\n      label: \"\",\n      fill: false,\n      backgroundColor: \"\",\n      borderColor: \"\",\n      data: data\n    }]\n  };\n  var options = {\n    responsive: true,\n    centerText: {\n      display: true,\n      text: \"\"\n    },\n    scales: {\n      xAxes: [{\n        type: \"time\",\n        time: {\n          displayFormats: {\n            second: \"h:mm:ss\"\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"Times\"\n        },\n        gridLines: {\n          display: true // drawOnChartArea: false,\n\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: true,\n          drawOnChartArea: false\n        },\n        scaleLabel: {\n          display: true,\n          labelString: \"\"\n        },\n        ticks: {}\n      }]\n    },\n    legend: {\n      display: false\n    },\n    animation: {\n      duration: 0\n    },\n    annotation: {\n      annotations: [{\n        drawTime: \"beforeDatasetsDraw\",\n        type: \"box\",\n        xScaleID: \"x-axis-0\",\n        yScaleID: \"y-axis-0\",\n        borderWidth: 0,\n        backgroundColor: \"rgba(46, 204, 113,0.3)\"\n      }]\n    },\n    maintainAspectRatio: false\n  };\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(Line, {\n    data: chartData,\n    options: options,\n    height: 320,\n    ref: chartRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Chart, \"ApdxdStqO3kIFwLQCXrt4okpZnk=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/g4rtu1/Work/saypilot/pages/postsAndAnalytics/chart/index.tsx"],"names":["useState","useRef","Line","Chart","props","chartRef","data","setData","chartData","labels","datasets","label","fill","backgroundColor","borderColor","options","responsive","centerText","display","text","scales","xAxes","type","time","displayFormats","second","scaleLabel","labelString","gridLines","yAxes","drawOnChartArea","ticks","legend","animation","duration","annotation","annotations","drawTime","xScaleID","yScaleID","borderWidth","maintainAspectRatio"],"mappings":";;;;;;AACA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,cAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAgB;AAAA;;AAC5B,MAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAD,CAAvB;;AAD4B,kBAEJD,QAAQ,CAAC,EAAD,CAFJ;AAAA,MAErBM,IAFqB;AAAA,MAEfC,OAFe;;AAI5B,MAAMC,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAE,EADQ;AAEhBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,eAAe,EAAE,EAHnB;AAIEC,MAAAA,WAAW,EAAE,EAJf;AAKER,MAAAA,IAAI,EAAEA;AALR,KADQ;AAFM,GAAlB;AAaA,MAAMS,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,IADC;AAEVC,MAAAA,IAAI;AAFM,KAFE;AAMdC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,IAAI,EAAE;AACJC,UAAAA,cAAc,EAAE;AACdC,YAAAA,MAAM,EAAE;AADM;AADZ,SAFR;AAOEC,QAAAA,UAAU,EAAE;AACVR,UAAAA,OAAO,EAAE,IADC;AAEVS,UAAAA,WAAW,EAAE;AAFH,SAPd;AAWEC,QAAAA,SAAS,EAAE;AACTV,UAAAA,OAAO,EAAE,IADA,CAET;;AAFS;AAXb,OADK,CADD;AAmBNW,MAAAA,KAAK,EAAE,CACL;AACED,QAAAA,SAAS,EAAE;AACTV,UAAAA,OAAO,EAAE,IADA;AAETY,UAAAA,eAAe,EAAE;AAFR,SADb;AAKEJ,QAAAA,UAAU,EAAE;AACVR,UAAAA,OAAO,EAAE,IADC;AAEVS,UAAAA,WAAW,EAAE;AAFH,SALd;AASEI,QAAAA,KAAK,EAAE;AATT,OADK;AAnBD,KANM;AAuCdC,IAAAA,MAAM,EAAE;AACNd,MAAAA,OAAO,EAAE;AADH,KAvCM;AA0Cde,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAE;AADD,KA1CG;AA6CdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,CACX;AACEC,QAAAA,QAAQ,EAAE,oBADZ;AAEEf,QAAAA,IAAI,EAAE,KAFR;AAGEgB,QAAAA,QAAQ,EAAE,UAHZ;AAIEC,QAAAA,QAAQ,EAAE,UAJZ;AAKEC,QAAAA,WAAW,EAAE,CALf;AAME3B,QAAAA,eAAe,EAAE;AANnB,OADW;AADH,KA7CE;AAyDd4B,IAAAA,mBAAmB,EAAE;AAzDP,GAAhB;AA4DA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEjC,SAAZ;AAAuB,IAAA,OAAO,EAAEO,OAAhC;AAAyC,IAAA,MAAM,EAAE,GAAjD;AAAsD,IAAA,GAAG,EAAEV,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAlFD;;GAAMF,K;;KAAAA,K;AAoFN,eAAeA,KAAf","sourcesContent":["import { h } from \"preact\";\nimport { useState, useRef } from \"preact/hooks\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Chart = (props: any) => {\n  const chartRef = useRef(null);\n  const [data, setData] = useState([]);\n\n  const chartData = {\n    labels: [],\n    datasets: [\n      {\n        label: \"\",\n        fill: false,\n        backgroundColor: \"\",\n        borderColor: \"\",\n        data: data,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    centerText: {\n      display: true,\n      text: ``,\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            displayFormats: {\n              second: \"h:mm:ss\",\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: \"Times\",\n          },\n          gridLines: {\n            display: true,\n            // drawOnChartArea: false,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: true,\n            drawOnChartArea: false,\n          },\n          scaleLabel: {\n            display: true,\n            labelString: \"\",\n          },\n          ticks: {},\n        },\n      ],\n    },\n    legend: {\n      display: false,\n    },\n    animation: {\n      duration: 0,\n    },\n    annotation: {\n      annotations: [\n        {\n          drawTime: \"beforeDatasetsDraw\",\n          type: \"box\",\n          xScaleID: \"x-axis-0\",\n          yScaleID: \"y-axis-0\",\n          borderWidth: 0,\n          backgroundColor: \"rgba(46, 204, 113,0.3)\",\n        },\n      ],\n    },\n    maintainAspectRatio: false,\n  };\n\n  return (\n    <div>\n      <Line data={chartData} options={options} height={320} ref={chartRef} />\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}